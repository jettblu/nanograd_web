/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function greet(a: number, b: number): void;
export function __wbg_updateresult_free(a: number): void;
export function updateresult_new(a: number, b: number): number;
export function updateresult_get_epoch(a: number): number;
export function updateresult_to_json(a: number, b: number): void;
export function __wbg_trainingresult_free(a: number): void;
export function trainingresult_new(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number, m: number): number;
export function trainingresult_get_loss(a: number, b: number): void;
export function trainingresult_get_network_dimensions(a: number, b: number): void;
export function trainingresult_get_num_epochs(a: number): number;
export function trainingresult_increment_num_epochs(a: number): void;
export function trainingresult_set_new_loss(a: number, b: number): void;
export function trainingresult_set_predictions(a: number, b: number, c: number): void;
export function trainingresult_set_grid_predictions(a: number, b: number, c: number): void;
export function trainingresult_set_grid_xs(a: number, b: number, c: number): void;
export function trainingresult_set_grid_ys(a: number, b: number, c: number): void;
export function trainingresult_set_classification_error(a: number, b: number): void;
export function trainingresult_get_grid_predictions(a: number, b: number): void;
export function trainingresult_get_grid_xs(a: number, b: number): void;
export function trainingresult_get_grid_ys(a: number, b: number): void;
export function trainingresult_get_classification_error(a: number): number;
export function trainingresult_get_predictions(a: number, b: number): void;
export function run_gradient_sample(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function updateresult_get_loss(a: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
